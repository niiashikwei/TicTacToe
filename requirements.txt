Tic-tac-toe

Create a console program that plays Tic-tac-toe. TDD all of your work. Ask for help if you are stuck for more than 5 minutes. Do the stories in order and only work on one story at a time. More details about Tic-tac-toe.

Stories

Playing the Game

Draw the board

When the game starts, draw a board that looks like this:

1|2|3

-----

4|5|6

-----

7|8|9

First Player Moves

When the game starts (and after the board is drawn) the first player should make a move.

A player move consists of:

Prompting the user to enter a number indicating where they want to place their mark

Redrawing the board with the player’s symbol in that location


The first player’s mark is an “X”.

Don’t worry about handling the case where the player enters a number that is not between 1 and 9.

Second Player Moves

After the first player makes a move, tell a second player to make their move. Redraw the board with an ‘O’ in that location (and still draw player 1’s ‘X’). You don’t need to check if that location is already taken.

Location already taken

If either player moves into a cell that is already used, display the message, “Location already taken” and prompt them to try again (repeat this until they make a valid move).

Repeat until the board is filled

Alternate player turns until the board is filled. Draw the board once it is full and display the message, “Game is a draw”.

Win by Filling a Row

After each move, if that player has three in a row horizontally, end the game and display the message, “Player <#> Wins!”.

Win by Filling a Column

After each move, if that player has three in a row vertically, end the game and display the message, “Player <#> Wins!”.

Win by Filling a Diagonal

After each move, if that player has three in a row diagonally, end the game and display the message, “Player <#> Wins!”.


AI Plays the Game

Computer Player

Replace one of the players with a computer player that chooses an empty location using whatever strategy to prefer.

Go for the win

The computer player should first choose an empty location if it allows them to win the game.

Block

After trying to win, the computer player should always block their opponent when they can win on their next move.

Fork

After checking for a block, the computer player should create an opportunity where they have two threats to win (two non-blocked lines of 2).

Block Fork

After trying to fork, the computer player should choose any location where the opponent could create a fork on their next turn.

Center

After trying to block a fork, the computer player should move in the center location if it is empty.

Opposite Corner

If the opponent has played in a corner, the computer player should play in the opposite corner.

Corner

The computer player should play in an empty corner location.

Side

The computer player should play in an empty side location.

Fight!

Replace the human player with a computer player and have the computer players play 100 games. Then report the number of games that each player won.


